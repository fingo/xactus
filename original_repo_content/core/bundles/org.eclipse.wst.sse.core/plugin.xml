<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>


	<!-- deprecated -->
	<extension-point id="adaptOnCreateFactory" name="%Adapt_On_Create_Factory_Extension.name" schema="schema/adaptOnCreateFactory.exsd"/>
	<!-- not for use by clients (internal)-->
	<extension-point id="documentTypes" name="%Document_Types_Extension.name" schema="schema/documentTypes.exsd"/>
	<!-- not for use by clients (internal)-->
	<extension-point id="embeddedTypeHandler" name="%JSP_Embedded_Content_Type_Handler_Extension.name" schema="schema/embeddedTypeHandler.exsd"/>
	<!-- deprecated -->
	<extension-point id="contentTypeFactoryContribution" name="%Content_Type_Factory_Contribution_Extension.name" schema="schema/contentTypeFactoryContribution.exsd"/>
	<!-- I commented out ... clients should just use the normal platform way of registering these 
		adapterFactories. At worst, they'd need a small plugin with 'startup' specified ... but that's 
		better than us getting hit with the performance impact (of loading plugins and pre-reqs, etc.). 
		<extension-point id="uriResolverAdapterFactory" name="Resource Adapter Factory for Creating URIResolvers"/>
	-->
	<!-- not for use by clients (internal)-->
	<extension-point id="cssprofile" name="%CSS_Profile_Extension.name" schema="schema/cssprofile.exsd"/>
	<!-- not for use by clients (internal)-->
	<extension-point id="commentElementHandler" name="%Comment_Element_Handler_Extension.name" schema="schema/commentElementHandler.exsd"/>

	<!-- not for use by clients (internal)-->
	<extension-point id="modelHandler" name="%Model_Handler_Extension.name" schema="schema/modelHandler.exsd"/>
	<!-- not for use by clients (internal)-->
	<extension-point
		id="formatProcessors"
		name="%Format_Processors_Extension_Point.name"
		schema="schema/formatProcessors.exsd" />

	<!-- not for use by clients (internal)-->
	<extension-point id="formattingDelegate" name="%Formatting_Delegate.name" schema="schema/formattingDelegate.exsd"/>

	<!-- not for use by clients (internal)-->
	<extension-point id="taskscanner" name="%Task_Scanner_Extension_Point.name" schema="schema/taskscanner.exsd"/>

	<!-- Make sure default preference values are set at runtime -->
	<extension point="org.eclipse.core.runtime.preferences">
		<initializer
			class="org.eclipse.wst.sse.core.internal.preferences.PreferenceInitializer" />
	</extension>

	<extension point="org.eclipse.wst.validation.validatorGroup">
		<group id="structuredModelGroup">
			<listener class="org.eclipse.wst.sse.core.internal.validate.ValidatorGroupListener"/>
		</group>
	</extension>
	
	<!-- Define the StructuredFilePropertyTester as it will handle tracing the entire -->
	<!-- content type hierarchy for a file. Only operates on IFiles                   -->
	<!-- Deprecated, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=288216         -->
	<extension point="org.eclipse.core.expressions.propertyTesters">
		<propertyTester
			class="org.eclipse.wst.sse.core.internal.propertytester.StructuredFilePropertyTester"
			id="org.eclipse.wst.sse.core.expressions.propertyTester.StructuredFilePropertyTester"
			namespace="org.eclipse.wst.sse.core.resources"
			properties="contentTypeId"
			type="org.eclipse.core.resources.IFile">
    </propertyTester>
 </extension>
	<extension point="org.eclipse.core.runtime.adapters">
		<factory
			adaptableType="org.eclipse.wst.sse.core.internal.provisional.IStructuredModel"
			class="org.eclipse.wst.sse.core.internal.model.ModelResourceFactory">
			<adapter
				type="org.eclipse.core.resources.IResource"/>
		</factory>
	</extension>
</plugin>
